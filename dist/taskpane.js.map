{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/* global document, Office, PowerPoint */\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.PowerPoint) {\n    console.log(\"✅ Office is ready in PowerPoint\");\n\n    const sideload = document.getElementById(\"sideload-msg\");\n    if (sideload) sideload.style.display = \"none\";\n\n    const appBody = document.getElementById(\"app-body\");\n    if (appBody) appBody.style.display = \"flex\";\n\n    const scanBtn = document.getElementById(\"scan-fonts\");\n    if (scanBtn) {\n      scanBtn.onclick = runFontChecker;\n      console.log(\"✅ Scan Fonts button is wired up\");\n    } else {\n      console.log(\"❌ Scan Fonts button not found\");\n    }\n  }\n});\n\nfunction copyToClipboard(text) {\n  navigator.clipboard.writeText(text).then(() => {\n    showToast(\"✅ Copied to clipboard\");\n  }, (err) => {\n    console.error(\"Clipboard copy failed:\", err);\n    showToast(\"❌ Copy failed\");\n  });\n}\n\n\nfunction isFontInstalled(fontName) {\n  const testString = \"mmmmmmmmmmlli\";\n  const testSize = \"72px\";\n\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n\n  context.font = `${testSize} monospace`;\n  const baselineWidth = context.measureText(testString).width;\n\n  context.font = `${testSize} '${fontName}', monospace`;\n  const testWidth = context.measureText(testString).width;\n\n  return testWidth !== baselineWidth;\n}\n\nfunction showToast(message) {\n  const toast = document.getElementById(\"toast\");\n  toast.textContent = message;\n  toast.className = \"show\";\n\n  setTimeout(() => {\n    toast.className = toast.className.replace(\"show\", \"\");\n    setTimeout(() => {\n      toast.style.display = \"none\";\n    }, 400);\n  }, 2000);\n\n  toast.style.display = \"block\";\n}\n\n\n\n\nexport async function runFontChecker() {\n  console.log(\"🔍 Scan Fonts button clicked\");\n\n  try {\n    let output = \"Scanning...\\n\";\n    document.getElementById(\"output\").textContent = output;\n\n    const missingFonts = {};\n    const usedSlideFonts = new Set();\n    const usedMasterFonts = new Set();\n    const fontsMissingInMaster = new Set();\n\n    await PowerPoint.run(async (context) => {\n      const slides = context.presentation.slides;\n      slides.load(\"items\");\n\n      await context.sync();\n\n      output += `Found ${slides.items.length} slide(s).\\n\\n`;\n\n      for (let i = 0; i < slides.items.length; i++) {\n        const slide = slides.items[i];\n        const shapes = slide.shapes;\n        const layout = slide.layout;\n        const layoutShapes = layout.shapes;\n\n        shapes.load(\"items/textFrame/textRange/font/name\");\n        layoutShapes.load(\"items/textFrame/textRange/font/name\");\n\n        await context.sync();\n\n        const fonts = new Set();\n        const layoutFonts = new Set();\n\n        for (const shape of shapes.items) {\n          if (\n            shape.textFrame &&\n            shape.textFrame.textRange &&\n            shape.textFrame.textRange.font &&\n            shape.textFrame.textRange.font.name\n          ) {\n            const font = shape.textFrame.textRange.font.name;\n            fonts.add(font);\n            usedSlideFonts.add(font);\n          }\n        }\n\n        for (const shape of layoutShapes.items) {\n          if (\n            shape.textFrame &&\n            shape.textFrame.textRange &&\n            shape.textFrame.textRange.font &&\n            shape.textFrame.textRange.font.name\n          ) {\n            const font = shape.textFrame.textRange.font.name;\n            layoutFonts.add(font);\n            usedMasterFonts.add(font);\n          }\n        }\n\n        const fontList = [...fonts];\n        fontList.forEach((font) => {\n          const isMissing = !isFontInstalled(font);\n          if (isMissing) {\n            if (!missingFonts[font]) missingFonts[font] = [];\n            missingFonts[font].push(i + 1);\n          }\n        });\n\n        const layoutFontList = [...layoutFonts];\n        layoutFontList.forEach((font) => {\n          const isMissing = !isFontInstalled(font);\n          const isUsedInSlide = usedSlideFonts.has(font);\n          if (isMissing && !isUsedInSlide) {\n            fontsMissingInMaster.add(font);\n            if (!missingFonts[font]) missingFonts[font] = [];\n            if (!missingFonts[font].includes(\"Master only\")) {\n              missingFonts[font].push(\"Master only\");\n            }\n          }\n        });\n      }\n\n      // Build the final output text\n      output = \"\";\n\n      if (usedSlideFonts.size > 0) {\n        output += \"=== FONTS USED IN SLIDES ===\\n\";\n        output += [...usedSlideFonts].sort().join(\", \") + \"\\n\\n\";\n      }\n\n      if (Object.keys(missingFonts).length > 0) {\n        output += \"=== MISSING FONTS ===\\n\";\n        for (const font in missingFonts) {\n          const where = missingFonts[font].join(\", \");\n          const masterNote = usedMasterFonts.has(font) ? \" (Master Slides)\" : \"\";\n          output += `❌ ${font} (Slides: ${where})${masterNote}\\n`;\n        }\n      } else {\n        output += \"✅ No missing fonts detected.\\n\";\n      }\n    });\n\n    // === OUTPUT TO TASKPANE HTML ===\n    const outputElement = document.getElementById(\"output\");\n    const copyBtn = document.getElementById(\"copy-btn\");\n\n    outputElement.innerHTML = \"\";\n    copyBtn.style.display = \"none\";\n\n    let missingFontList = [];\n\n    output.split(\"\\n\").forEach((line) => {\n      const div = document.createElement(\"div\");\n\n      if (line.startsWith(\"=== \")) {\n        div.textContent = line;\n        div.className = \"heading\";\n        outputElement.appendChild(div);\n        return;\n      }\n\n      if (line.startsWith(\"✅\")) {\n        div.textContent = line;\n        div.className = \"success\";\n        outputElement.appendChild(div);\n        return;\n      }\n\n      const match = line.match(/^❌ (.+?) \\(Slides:/);\n      if (match) {\n        const fontName = match[1];\n        const span = document.createElement(\"span\");\n        span.textContent = fontName;\n        span.className = \"copyable\";\n        span.title = \"Click to copy\";\n        span.onclick = () => copyToClipboard(fontName);\n\n        div.appendChild(document.createTextNode(\"❌ \"));\n        div.appendChild(span);\n        div.appendChild(document.createTextNode(\"  \" + line.slice(3 + fontName.length)));\n        div.className = \"missing font-line\";\n\n        missingFontList.push(fontName);\n      } else {\n        div.textContent = line;\n        div.className = \"font-line\";\n      }\n\n      outputElement.appendChild(div);\n    });\n\n    if (missingFontList.length > 0) {\n      copyBtn.style.display = \"inline-block\";\n      copyBtn.onclick = () => copyToClipboard(missingFontList.join(\", \"));\n    }\n\n  } catch (error) {\n    console.error(\"❌ Error in runFontChecker:\", error);\n    document.getElementById(\"output\").textContent =\n      \"Error: \" + (error.message || error.toString());\n  }\n}\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>PowerPoint Font Checker</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> <style>body{background-color:#1e1e2f;color:#f0f0f0;font-family:\\\"Segoe UI\\\",sans-serif;padding:16px}h2{color:#fff;margin-bottom:.5em}#copy-btn,#scan-fonts{background-color:#2c2c3c;color:#f0f0f0;border:1px solid #444;border-radius:4px;padding:8px 12px;margin-top:10px;font-size:.95em;cursor:pointer;transition:background-color .2s}#copy-btn:hover,#scan-fonts:hover{background-color:#3e3e5a}.copyable{cursor:pointer;text-decoration:underline;color:#91c4ff;transition:color .2s}.copyable:hover{color:#fff}#output,pre{font-family:Consolas,monospace;font-size:.9em;margin-top:1em;white-space:pre-wrap}.heading{color:#bbf;font-weight:700;margin-top:1em}.missing{color:#ff5c5c}.success{color:#a5f28c}.font-line{margin-left:1.2em;line-height:1.5}#toast{position:fixed;bottom:20px;left:50%;transform:translateX(-50%);background-color:#323232;color:#fff;padding:10px 18px;border-radius:6px;font-size:.9em;z-index:9999;opacity:0;transition:opacity .4s ease}#toast.show{display:block;opacity:1}</style> </head> <body> <div id=\\\"app-body\\\" style=\\\"display:flex;flex-direction:column\\\"> <h2>PowerPoint Font Checker</h2> <button id=\\\"scan-fonts\\\">🔍 Scan Fonts</button> <button id=\\\"copy-btn\\\" style=\\\"display:none\\\">📋 Copy Missing Fonts</button> <pre id=\\\"output\\\"></pre> </div> <div id=\\\"toast\\\" style=\\\"display:none\\\"></div> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","configurable","writable","_invoke","_createForOfIteratorHelper","Array","isArray","_unsupportedIterableToArray","_n","F","s","next","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","_nonIterableSpread","toString","slice","constructor","name","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","copyToClipboard","text","navigator","clipboard","writeText","showToast","err","console","error","isFontInstalled","fontName","testString","testSize","context","createElement","getContext","font","concat","baselineWidth","measureText","width","message","toast","getElementById","textContent","className","setTimeout","style","display","runFontChecker","_runFontChecker","_callee2","output","missingFonts","usedSlideFonts","usedMasterFonts","fontsMissingInMaster","outputElement","copyBtn","missingFontList","_t","_context3","log","Set","PowerPoint","run","_ref","_callee","slides","_loop","where","masterNote","_context2","presentation","load","sync","items","slide","shapes","layout","layoutShapes","fonts","layoutFonts","_iterator","_step","shape","_font","_iterator2","_step2","_shape","_font2","_context","textFrame","textRange","add","forEach","push","isMissing","isUsedInSlide","has","includes","_regeneratorValues","size","sort","join","keys","_x","innerHTML","split","line","div","startsWith","appendChild","match","span","title","onclick","createTextNode","Office","onReady","info","host","HostType","sideload","appBody","scanBtn","URL"],"sourceRoot":""}